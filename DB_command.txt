-- Создать базу данных "Друзья человека"
DROP DATABASE IF EXISTS mens_friends;
CREATE DATABASE IF NOT EXISTS mens_friends;
USE mens_friends;

-- Создать таблицы с иерархией из диаграммы в БД
DROP TABLE IF EXISTS class_animals;
CREATE TABLE IF NOT EXISTS class_animals
(
	Id INT AUTO_INCREMENT PRIMARY KEY, 
	Class_name VARCHAR(20) NOT NULL
);
INSERT INTO class_animals (Class_name)
VALUES 
("pets"),
("pack_animals");

DROP TABLE IF EXISTS pets;
CREATE TABLE IF NOT EXISTS pets
(
	Id INT AUTO_INCREMENT PRIMARY KEY,
    Type_id INT,
    Animal_species VARCHAR(20),
    FOREIGN KEY (Type_id) REFERENCES class_animals (Id)
);
INSERT INTO pets (Type_id, Animal_species)
VALUES
(1, "Cat"),
(1, "Dog"),
(1, "Hamster");

DROP TABLE IF EXISTS pack_animals;
CREATE TABLE IF NOT EXISTS pack_animals
(
	Id INT AUTO_INCREMENT PRIMARY KEY,
    Type_id INT,
    Animal_species VARCHAR(20),
    FOREIGN KEY (Type_id) REFERENCES class_animals (Id)
);
INSERT INTO pack_animals (Type_id, Animal_species)
VALUES
(2, "Horse"),
(2, "Camel"),
(2, "Donkey");
SELECT * FROM pets;
SELECT * FROM pack_animals;

-- Заполнить низкоуровневые таблицы именами(животных), командами которые они выполняют и датами рождения

DROP TABLE IF EXISTS Cat;
CREATE TABLE IF NOT EXISTS Cat
(
	Id INT AUTO_INCREMENT PRIMARY KEY,
    Animal_species INT,
    `Name` VARCHAR(50),
    Command VARCHAR(50),
    Birthday DATE,
    FOREIGN KEY (Animal_species) REFERENCES pets (id)  
);
INSERT INTO Cat (Animal_species, `Name`, Command, Birthday)
VALUES
(1, "Ася", "спать, играть", "2022-01-02"),
(1, "Муся", "спать, играть", "2022-03-03"),
(1, "Буся", "спать, играть", "2022-04-04");
SELECT * FROM Cat;

DROP TABLE IF EXISTS Dog;
CREATE TABLE IF NOT EXISTS Dog
(
	Id INT AUTO_INCREMENT PRIMARY KEY,
    Animal_species INT,
    `Name` VARCHAR(50),
    Command VARCHAR(50),
    Birthday DATE,
    FOREIGN KEY (Animal_species) REFERENCES pets (id)  
);
INSERT INTO Cat (Animal_species, `Name`, Command, Birthday)
VALUES
(2, "Алмаз", "сидеть, лапу, фас", "2019-01-02"),
(2, "Мухтар", "спать, играть", "2017-03-04"),
(2, "Спайк", "спать, играть", "2020-03-04");
SELECT * FROM Dog;

DROP TABLE IF EXISTS Hamster;
CREATE TABLE IF NOT EXISTS Hamster
(
	Id INT AUTO_INCREMENT PRIMARY KEY,
    Animal_species INT,
    `Name` VARCHAR(50),
    Command VARCHAR(50),
    Birthday DATE,
    FOREIGN KEY (Animal_species) REFERENCES pets (id)  
);
INSERT INTO Hamster (Animal_species, `Name`, Command, Birthday)
VALUES
(3, "Гарри", "бегать, есть", "2022-03-02"),
(3, "Рон", "бегать, есть", "2018-03-08"),
(3, "Пух", "бегать, есть", "2023-06-04");
SELECT * FROM Hamster;

DROP TABLE IF EXISTS Horse;
CREATE TABLE IF NOT EXISTS Horse
(
	Id INT AUTO_INCREMENT PRIMARY KEY,
    Animal_species INT,
    `Name` VARCHAR(50),
    Command VARCHAR(50),
    Birthday DATE,
    FOREIGN KEY (Animal_species) REFERENCES pack_animals (id)  
);
INSERT INTO Horse (Animal_species, `Name`, Command, Birthday)
VALUES
(1, "Апполон", "голопом, рысью", "2022-04-08"),
(1, "Базилик", "голопом, рысью", "2020-11-11"),
(1, "Версаль", "голопом, рысью", "2021-06-04");
SELECT * FROM Horse;

DROP TABLE IF EXISTS Camel;
CREATE TABLE IF NOT EXISTS Camel
(
	Id INT AUTO_INCREMENT PRIMARY KEY,
    Animal_species INT,
    `Name` VARCHAR(50),
    Command VARCHAR(50),
    Birthday DATE,
    FOREIGN KEY (Animal_species) REFERENCES pack_animals (id)  
);
INSERT INTO Camel (Animal_species, `Name`, Command, Birthday)
VALUES
(2, "Денеб", "Гит, Дур, Каш", "2019-04-22"),
(2, "Хлоя", "Гит, Дур, Каш", "2018-11-30"),
(2, "Омлет", "Гит, Дур, Каш", "2017-06-28");
SELECT * FROM Camel;

DROP TABLE IF EXISTS Donkey;
CREATE TABLE IF NOT EXISTS Donkey
(
	Id INT AUTO_INCREMENT PRIMARY KEY,
    Animal_species INT,
    `Name` VARCHAR(50),
    Command VARCHAR(50),
    Birthday DATE,
    FOREIGN KEY (Animal_species) REFERENCES pack_animals (id)  
);
INSERT INTO Donkey (Animal_species, `Name`, Command, Birthday)
VALUES
(3, "Дюна", "вперед, стоять", "2019-04-22"),
(3, "Перл", "вперед, стоять", "2018-11-30"),
(3, "Изабель", "вперед, стоять", "2017-06-28");
SELECT * FROM Donkey;

-- 10. Удалив из таблицы верблюдов, т.к. верблюдов решили перевезти в другой питомник на зимовку.
-- Объединить таблицы лошади, и ослы в одну таблицу.

DROP TABLE Camel;

CREATE TABLE cloven_footed
AS( SELECT * FROM Horse UNION SELECT * FROM Donkey);
SELECT * FROM cloven_footed;

-- Объединить все таблицы в одну, при этом сохраняя поля, указывающие на
-- прошлую принадлежность к старым таблицам.

DROP TABLE IF EXISTS All_animals;
CREATE TABLE IF NOT EXISTS All_animals
AS(
SELECT * FROM Cat UNION
SELECT * FROM Dog UNION
SELECT * FROM Hamster UNION
SELECT * FROM Horse UNION
SELECT * FROM Donkey);

SELECT * FROM All_animals;

-- Создать новую таблицу “молодые животные” в которую попадут все
-- животные старше 1 года, но младше 3 лет и в отдельном столбце с точностью
-- до месяца подсчитать возраст животных в новой таблице

DROP TABLE IF EXISTS Young_animals;
CREATE TABLE IF NOT EXISTS Young_animals AS
SELECT `Name`, Command, Birthday, TIMESTAMPDIFF(MONTH, Birthday, CURDATE()) AS Age_in_month
FROM All_animals 
WHERE Birthday BETWEEN ADDDATE(curdate(), INTERVAL -3 YEAR) AND ADDDATE(CURDATE(), INTERVAL -1 YEAR);
SELECT * FROM Young_animals;
SELECT * FROM All_animals;
